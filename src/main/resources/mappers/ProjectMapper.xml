<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.Spring_MyBatis_Thymeleaf.mapper.ProjectMapper">

    <resultMap id="ProjectResultMap" type="com.example.Spring_MyBatis_Thymeleaf.model.Project">
        <id column="projectId" property="projectId"/>
        <result column="projectNM" property="projectNM"/>
        <result column="difficulty" property="difficulty"/>
        <result column="version" property="version"/>
        <result column="insTM" property="insTM"/>
        <result column="updTM" property="updTM"/>
        <association property="department" javaType="com.example.Spring_MyBatis_Thymeleaf.model.Department">
            <id column="deptId" property="deptId"/>
            <result column="deptNM" property="deptNM"/>
        </association>
    </resultMap>

    <select id="countByProjectName" parameterType="String">
        SELECT COUNT(*) FROM project p
        WHERE p.projectNM = #{projectNM}
    </select>

    <insert id="createProject" parameterType="com.example.Spring_MyBatis_Thymeleaf.model.Project" useGeneratedKeys="true" keyProperty="projectId">
        INSERT INTO project(projectNM, difficulty, insTM, updTM, version, deptId)
        VALUES (#{projectNM}, #{difficulty}, #{insTM}, #{updTM}, #{version}, #{department.deptId})
    </insert>

    <select id="getAllProjects" resultMap="ProjectResultMap">
        SELECT p.projectId, p.projectNM, p.difficulty, p.version, p.insTM, p.updTM, d.deptNM
        FROM project p
        JOIN department d ON p.deptId = d.deptId
        WHERE p.projectId LIKE #{keySearch}
            OR p.projectNM LIKE #{keySearch}
            OR p.difficulty LIKE #{keySearch}
            OR d.deptNM LIKE #{keySearch}
        ORDER BY p.projectId
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <select id="countProjectsByKeySearch" parameterType="string">
        SELECT COUNT(*) FROM project p
        JOIN department d ON p.deptId = d.deptId
        WHERE p.projectId LIKE #{keySearch}
           OR p.projectNM LIKE #{keySearch}
           OR p.difficulty LIKE #{keySearch}
           OR d.deptNM LIKE #{keySearch}
    </select>

    <select id="getProjectById" resultMap="ProjectResultMap">
        SELECT p.projectId, p.projectNM, p.difficulty, p.version, p.insTM, p.updTM, p.deptId
        FROM project p
        WHERE p.projectId = #{projectId}
    </select>

    <update id="updateProject" parameterType="com.example.Spring_MyBatis_Thymeleaf.model.Project" useGeneratedKeys="true" keyProperty="projectId">
        UPDATE project p
        SET p.projectNM = #{projectNM},
            p.difficulty = #{difficulty},
            p.version = #{version},
            p.updTM = #{updTM},
            p.deptId = #{department.deptId}
        WHERE p.projectId = #{projectId}
    </update>


    <select id="countByProjectNameBeforeUpdate" resultType="int">
        SELECT COUNT(*) FROM project p
        WHERE p.projectNM = #{projectNM}
        AND p.projectId != #{projectId}
    </select>

    <delete id="deleteProjectById" parameterType="int">
        DELETE FROM project p
        WHERE p.projectId = #{projectId}
    </delete>

</mapper>
